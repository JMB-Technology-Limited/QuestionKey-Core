{#
# @license 3-clause BSD
# @link https://github.com/QuestionKey/QuestionKey-Core
#}

{% extends 'QuestionKeyBundle::base.html.twig' %}

{% block title %}Run Version {{ treeVersion.titleAdmin }} of {{  tree.titleAdmin }} | Admin{%  endblock %}

{% block main %}

    <ol class="breadcrumb">
        <li><a href="{{ path('questionkey_admin') }}">Admin</a></li>
        <li><a href="{{ path('questionkey_admin_tree_show', {'treeId':tree.publicId }) }}">Tree: {{ tree.titleAdmin}}</a></li>
        <li><a href="{{ path('questionkey_admin_tree_version_show', {'treeId':tree.publicId,'versionId':treeVersion.publicId }) }}">Version: {{ treeVersion.titleAdmin}}</a></li>
        <li class="active">Run Tree</li>
    </ol>

    <div id="DemoHere" class="externalWidgetNormal">Loading ...</div>

    <div id="Links" style="display:none ">
        <ul class="list-group">
            <li class="list-group-item"><a id="LinkNode" href="" class="btn btn-default" target="_blank">View Node</a></li>
        </ul>
    </div>

    {%  include 'QuestionKeyBundle:AdminTreeVersion:run.selector.html.twig' %}

{% endblock %}

{% block javascript %}
    {% javascripts '@QuestionKeyBundle/Resources/public/js/external/cascade-jquery-v1.js'  %}
        <script src="{{ asset_url }}"></script>
    {% endjavascripts %}

    <script>
        var tree;
        $( document ).ready(function() {

            var callBackAfterDrawNode = function(data) {
                $('#LinkNode').attr('href', data.node.url);
                $('#Links').show();
            };

            $.ajax({
                url: "{{ path('questionkey_admin_tree_version_data_json', {'treeId':tree.publicId,'versionId':treeVersion.publicId }) }}",
                context: document.body,
                success: function(data) {
                    tree = new QuestionKeyNormalTree("#DemoHere", {'treeData':data, 'logUserActions':false, 'browserHistoryRewrite':true, callBackAfterDrawNode: callBackAfterDrawNode });
                    window.onpopstate = function(event) {
                        tree.onWindownPopState(event);
                    };
                    tree.start();
                }
            });

        });
    </script>
{% endblock %}
